version: "3"
services:
  master:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - master-data:/var/lib/postgresql/data
      - ./master/init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
      - ./master/postgres.conf:/docker-entrypoint-initdb.d/postgres.conf
      - ./master/pg_hba.conf:/docker-entrypoint-initdb.d/pg_hba.conf
      - ./master/init.sql:/docker-entrypoint-initdb.d/init.sql
  replica:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    depends_on:
      - master
    volumes:
      - replica-data:/var/lib/postgresql/data
      - ./replica/postgres.conf:/docker-entrypoint-initdb.d/postgres.conf
    command: >
      bash -c "until pg_basebackup -h master -U postgres -D /var/lib/postgresql/data -Fp -Xs -P -R; do
        sleep 1;
      done;
      chown -R postgres:postgres /var/lib/postgresql/data && \
      chmod 700 /var/lib/postgresql/data && \
      exec su postgres -c 'postgres -c config_file=/docker-entrypoint-initdb.d/postgres.conf'"
  api:
    build: rest-api
    environment:
      DATABASE_URL: postgres://postgres:postgres@master:5432/demo?sslmode=disable
      REPLICA_URL: postgres://postgres:postgres@replica:5432/demo?sslmode=disable
    depends_on:
      - master
      - replica
    ports:
      # - "8080"
      - "8080:8080"
    # deploy:
    #   replicas: 3
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api
  redis:
    image: redis:7
    ports:
      - "6379:6379"
volumes:
  master-data:
  replica-data:
